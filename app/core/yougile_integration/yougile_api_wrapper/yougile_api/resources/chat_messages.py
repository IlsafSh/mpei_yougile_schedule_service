"""
–†–µ—Å—É—Ä—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —á–∞—Ç–∞.
"""
from typing import Dict, Any, List, Optional
from .base import BaseResource, NestedResourceMixin


class ChatMessagesResource(BaseResource, NestedResourceMixin):
    """–†–µ—Å—É—Ä—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —á–∞—Ç–∞."""
    
    _base_url = '/chats/{parent_id}/messages'
    
    def list(self, chat_id: str, from_user_id: Optional[str] = None, 
             include_deleted: Optional[bool] = None, include_system: Optional[bool] = None,
             label: Optional[str] = None, limit: int = 50, offset: int = 0,
             since: Optional[int] = None, text: Optional[str] = None) -> List[Dict[str, Any]]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π.
        
        Args:
            chat_id: ID —á–∞—Ç–∞
            from_user_id: ID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –æ—Ç –∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
            include_deleted: –í–∫–ª—é—á–∞—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            include_system: –í–∫–ª—é—á–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            label: –ü–æ–∏—Å–∫ –ø–æ –±—ã—Å—Ç—Ä–æ–π —Å—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            limit: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 50)
            offset: –ò–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)
            since: –ò—Å–∫–∞—Ç—å —Å—Ä–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–∑–∂–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (timestamp)
            text: –°—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—É—é —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å
            
        Returns:
            list: –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        """
        params = {
            'limit': limit,
            'offset': offset
        }
        
        if from_user_id:
            params['fromUserId'] = from_user_id
            
        if include_deleted is not None:
            params['includeDeleted'] = include_deleted
            
        if include_system is not None:
            params['includeSystem'] = include_system
            
        if label:
            params['label'] = label
            
        if since:
            params['since'] = since
            
        if text:
            params['text'] = text
            
        return super().list(chat_id, **params)
    
    def create(self, chat_id: str, text: str, text_html: int, label: str) -> Dict[str, Any]:
        """
        –ù–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç.
        
        Args:
            chat_id: ID —á–∞—Ç–∞
            text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            text_html: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ HTML
            label: –ë—ã—Å—Ç—Ä–∞—è —Å—Å—ã–ª–∫–∞
            
        Returns:
            dict: –°–æ–∑–¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        data = {
            'text': text,
            'textHtml': text_html,
            'label': label
        }
        
        return super().create(chat_id, **data)
    
    def get(self, chat_id: str, id: str) -> Dict[str, Any]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ ID.
        
        Args:
            chat_id: ID —á–∞—Ç–∞
            id: ID —Å–æ–æ–±—â–µ–Ω–∏—è
            
        Returns:
            dict: –°–æ–æ–±—â–µ–Ω–∏–µ
        """
        return super().get(chat_id, id)
    
    def update(self, chat_id: str, id: str, deleted: Optional[bool] = None,
               label: Optional[str] = None, react: str = 'üëç') -> Dict[str, Any]:
        """
        –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.
        
        Args:
            chat_id: ID —á–∞—Ç–∞
            id: ID —Å–æ–æ–±—â–µ–Ω–∏—è
            deleted: –ï—Å–ª–∏ true, –∑–Ω–∞—á–∏—Ç –æ–±—ä–µ–∫—Ç —É–¥–∞–ª–µ–Ω
            label: –ë—ã—Å—Ç—Ä–∞—è —Å—Å—ã–ª–∫–∞
            react: –°–ø–∏—Å–æ–∫ —Ä–µ–∞–∫—Ü–∏–π –∞–¥–º–∏–Ω–∞
            
        Returns:
            dict: –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        data = {
            'react': react
        }
        
        if deleted is not None:
            data['deleted'] = deleted
            
        if label:
            data['label'] = label
            
        return super().update(chat_id, id, **data)
